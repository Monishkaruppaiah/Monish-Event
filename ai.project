import React, { useState, useRef, useEffect } from 'react'; import { Button } from '@/components/ui/button'; import { Input } from '@/components/ui/input'; import { Send, Plane, Loader } from 'lucide-react'; import { useToast } from '@/components/ui/use-toast'; 
 
type Message = { 
  id: string;   content: string; 
  sender: 'user' | 'bot'; 
  timestamp: Date; 
}; 
 
const ChatBot = () => {   const [messages, setMessages] = useState<Message[]>([ 
    {        
id: '1', 
      content: "Hello! I'm SkyWise AI assistant. How can I help you with flight tracking today?",       sender: 'bot', 
      timestamp: new Date(), 
    }, 
  ]); 
  const [input, setInput] = useState(''); 
  const [isLoading, setIsLoading] = useState(false);   const [apiKey, setApiKey] = useState(''); 
  const messagesEndRef = useRef<HTMLDivElement>(null);   const { toast } = useToast(); 
 
  useEffect(() => { 
    scrollToBottom(); 
     
    // Check localStorage for saved API key 
    const savedApiKey = localStorage.getItem('openai_api_key');     if (savedApiKey) { 
      setApiKey(savedApiKey); 
    } 
  }, [messages]); 
 
  const scrollToBottom = () => { 
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' }); 
  }; 
 
  const handleSendMessage = async (e: React.FormEvent) => {     e.preventDefault(); 
     
    if (!input.trim()) return; 
     
    // Add user message     const userMessage: Message = {       id: Date.now().toString(),       content: input,       sender: 'user',       timestamp: new Date(), 
    }; 
     
    setMessages((prev) => [...prev, userMessage]);     setInput(''); 
    setIsLoading(true); 
         try { 
      let botReply = ''; 
       
      // Check if we have an API key 
      if (apiKey) {         try { 
          // Call OpenAI API with the user's API key 
          const response = await fetch('https://api.openai.com/v1/chat/completions', {             method: 'POST',             headers: { 
              'Content-Type': 'application/json', 
              'Authorization': `Bearer ${apiKey}` 
            }, 
            body: JSON.stringify({               model: 'gpt-4o-mini',               messages: [ 
                { 
                  role: 'system',                   content: 'You are an AI assistant for SkyWise, an AI-powered flight tracking system. Your primary focus is on providing information about flights, airports, airlines, and travel recommendations. When you don\'t know specific flight details, suggest what information would be helpful to provide better assistance.' 
                }, 
                ...messages.map(msg => ({ 
                  role: msg.sender === 'user' ? 'user' : 'assistant',                   content: msg.content 
                })),                 { 
                  role: 'user', 
                  content: input 
                } 
              ], 
              max_tokens: 500 
            })           }); 
 
          if (!response.ok) { 
            throw new Error(`API Error: ${response.status}`); 
          } 
 
          const data = await response.json(); 
          botReply = data.choices[0].message.content; 
        } catch (apiError) { 
          console.error('Error calling OpenAI API:', apiError); 
          throw new Error('Could not connect to the OpenAI API. Please check your API key.'); 
        } 
      } else { 
        // Fallback to simulated responses if no API key         botReply = simulateResponse(input); 
      } 
 
      // Add bot message with slight delay for natural feel       setTimeout(() => { 
        const botMessage: Message = {           id: (Date.now() + 1).toString(),           content: botReply,           sender: 'bot', 
          timestamp: new Date(), 
        }; 
         
        setMessages((prev) => [...prev, botMessage]);         setIsLoading(false); 
      }, 800); 
       
    } catch (error) { 
      console.error('Error processing message:', error); 
       
      const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred'; 
       
      // Create a fallback bot message       const fallbackMessage: Message = {         id: (Date.now() + 1).toString(), 
        content: `I'm currently having trouble connecting to my knowledge base. Please try again later or ask a different question.`, 
        sender: 'bot', 
        timestamp: new Date(), 
      }; 
       
      setMessages((prev) => [...prev, fallbackMessage]); 
             toast({ 
        title: "Connection Error",         description: errorMessage, 
        variant: "destructive", 
      }); 
       
      setIsLoading(false); 
    }   };  
  // Save API key 
  const handleSaveApiKey = (key: string) => {     localStorage.setItem('openai_api_key', key);     setApiKey(key); 
    toast({ 
      title: "API Key Saved", 
      description: "Your OpenAI API key has been saved. The chatbot will now use this key for responses.", 
    });   }; 
 
  // Basic simulated response function for when no API key is provided   const simulateResponse = (userInput: string) => {     const userInputLower = userInput.toLowerCase(); 
     
    if (userInputLower.includes('hello') || userInputLower.includes('hi')) {       return "Hello! How can I help you with flight tracking today?"; 
    } else if (userInputLower.includes('flight')) { 
      return "I can help with flight tracking! To provide accurate information, I'd need details like the flight number, airline, departure/arrival locations, or date of travel. What specific flight information are you looking for?"; 
    } else if (userInputLower.includes('airport')) { 
      return "I can provide information about airports worldwide. Please let me know which airport you're interested in learning about, or if you need to find nearby airports for a specific location."; 
    } else if (userInputLower.includes('airline')) { 
      return "I can provide details about various airlines, their routes, and services. Which airline are you interested in?"; 
    } else if (userInputLower.includes('api') || userInputLower.includes('key')) { 
      return "To get more detailed and personalized responses, you can add your OpenAI API key in the Settings page. This will allow me to provide more comprehensive assistance."; 
    } else { 
      return "I'd be happy to help with that! To give you the most accurate information about flights, airports, or airlines, could you provide more specific details about your question?"; 
    }   };  
  // Check for API key presence 
  const hasApiKey = !!apiKey; 
 
  return ( 
    <div className="flex flex-col h-[600px] bg-blue-50 rounded-xl shadow-lg border border-blue300/20 overflow-hidden"> 
      {/* Chat header */} 
      <div className="bg-gradient-to-r from-blue-500 to-blue-700 p-4 text-white flex items-center space-x-3"> 
        <div className="bg-white p-2 rounded-full"> 
          <Plane className="h-6 w-6 text-blue-500" /> 
        </div>         <div> 
          <h3 className="font-semibold">SkyWise AI Assistant</h3> 
          <p className="text-xs opacity-80"> 
            {hasApiKey  
              ? "Using OpenAI API for responses"  
              : "Using simulated responses - add API key in Settings"}           </p> 
        </div> 
      </div> 
       
      {/* Messages */} 
      <div className="flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50"> 
        {messages.map((message) => ( 
          <div 
            key={message.id} 
            className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`} 
          > 
            <div 
              className={` 
                ${message.sender === 'user' ? 'chat-message-user' : 'chat-message-bot'} 
              `} 
            > 
              <p>{message.content}</p> 
              <div className={`text-xs mt-1 ${message.sender === 'user' ? 'text-white/80' : 'text-gray500'}`}> 
                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}               </div> 
            </div> 
          </div> 
        ))} 
         
        {isLoading && ( 
          <div className="flex justify-start"> 
            <div className="bg-white shadow-md rounded-2xl rounded-tl-sm py-3 px-4"> 
              <div className="flex items-center space-x-2"> 
                <Loader className="h-4 w-4 animate-spin text-blue-500" /> 
                <p className="text-sm text-gray-500">SkyWise is thinking...</p> 
              </div> 
            </div> 
          </div> 
        )} 
         
        <div ref={messagesEndRef} /> 
      </div> 
       
      {/* Input area */} 
      <form onSubmit={handleSendMessage} className="p-4 bg-white border-t border-gray-200">         <div className="flex space-x-2"> 
          <Input             value={input} 
            onChange={(e) => setInput(e.target.value)}             placeholder="Ask about flight tracking..." 
            className="border border-gray-200 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all" 
            disabled={isLoading} 
          /> 
          <Button              type="submit"  
            disabled={isLoading || !input.trim()}  
            className="bg-blue-600 hover:bg-blue-700 text-white" 
          > 
            <Send className="h-4 w-4" /> 
          </Button> 
        </div> 
      </form> 
    </div> 
  ); }; 
 
export default ChatBot;  
 
 
@tailwind base; 
@tailwind components; 
@tailwind utilities; 
 
@layer base { 
  :root { 
    --background: 210 50% 94%;     --foreground: 220 33% 19%;     --card: 0 0% 100%;     --card-foreground: 220 33% 19%; 
 
    --popover: 0 0% 100%;     --popover-foreground: 220 33% 19%; 
 
    --primary: 210 80% 50%;     --primary-foreground: 0 0% 100%; 
 
    --secondary: 220 70% 30%;     --secondary-foreground: 0 0% 100%; 
 
    --muted: 210 30% 90%;     --muted-foreground: 220 10% 40%; 
 
    --accent: 220 70% 60%;     --accent-foreground: 220 33% 19%; 
 
    --destructive: 0 84% 60%;     --destructive-foreground: 0 0% 98%; 
 
    --border: 210 30% 85%; 
    --input: 210 30% 85%;     --ring: 210 70% 50%; 
 
    --radius: 0.75rem; 
 
    --sidebar-background: 0 0% 98%; 
    --sidebar-foreground: 240 5.3% 26.1%; 
    --sidebar-primary: 240 5.9% 10%; 
    --sidebar-primary-foreground: 0 0% 98%; 
    --sidebar-accent: 240 4.8% 95.9%; 
    --sidebar-accent-foreground: 240 5.9% 10%; 
    --sidebar-border: 220 13% 91%; 
    --sidebar-ring: 217.2 91.2% 59.8%; 
  }  
  .dark { 
    --background: 220 70% 10%;     --foreground: 210 70% 92%; 
 
    --card: 220 70% 15%;     --card-foreground: 210 70% 92%; 
 
    --popover: 220 70% 15%;     --popover-foreground: 210 70% 92%; 
 
    --primary: 210 80% 50%;     --primary-foreground: 0 0% 100%; 
 
    --secondary: 220 70% 30%;     --secondary-foreground: 0 0% 100%; 
 
    --muted: 220 33% 20%; 
    --muted-foreground: 210 20% 65%; 
 
    --accent: 220 70% 40%;     --accent-foreground: 0 0% 100%; 
 
    --destructive: 0 62% 30%; 
    --destructive-foreground: 0 0% 98%; 
 
    --border: 220 33% 25%; 
    --input: 220 33% 25%;     --ring: 210 80% 50%; 
 
    --sidebar-background: 240 5.9% 10%; 
    --sidebar-foreground: 240 4.8% 95.9%; 
    --sidebar-primary: 224.3 76.3% 48%; 
    --sidebar-primary-foreground: 0 0% 100%; 
    --sidebar-accent: 240 3.7% 15.9%; 
    --sidebar-accent-foreground: 240 4.8% 95.9%; 
    --sidebar-border: 240 3.7% 15.9%; 
    --sidebar-ring: 217.2 91.2% 59.8%; 
  } }  
@layer base { 
  * { 
    @apply border-border; 
  } 
 
  body { 
    @apply bg-background text-foreground; 
  } }  
.chat-message-user { 
  @apply bg-blue-600 text-white rounded-2xl rounded-tr-sm py-3 px-4 max-w-[80%] ml-auto; 
}  
.chat-message-bot { 
  @apply bg-white shadow-md rounded-2xl rounded-tl-sm py-3 px-4 max-w-[80%]; 
}  
.healthcare-card { 
  @apply bg-white rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300; 
}  
.healthcare-gradient-text { 
  @apply bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-blue-700; 
} 
 
.healthcare-input { 
  @apply border border-gray-200 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ringblue-500 transition-all; 
} 
  
 
import React from 'react'; import Navbar from '@/components/layout/Navbar'; import Footer from '@/components/layout/Footer'; 
import { Plane, Map, Globe, Award, Users } from 'lucide-react'; 
 
const About = () => { 
  const teamMembers = [ 
    { 
      name: 'K Monish',       role: 'Lead Developer', 
      image: 'https://randomuser.me/api/portraits/men/1.jpg' 
    }, 
    { 
      name: 'Nithin',       role: 'AI Specialist', 
      image: 'https://randomuser.me/api/portraits/men/2.jpg' 
    }   ]; 
 
  return ( 
    <div className="min-h-screen flex flex-col"> 
      <Navbar /> 
       
      {/* Hero Section */} 
      <section className="bg-blue-50 py-16"> 
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center"> 
          <div className="inline-flex items-center justify-center mb-6"> 
            <Plane className="h-8 w-8 text-blue-600 mr-2" /> 
            <span className="text-blue-600 font-bold text-lg">About Us</span> 
          </div> 
          <h1 className="text-4xl font-bold text-gray-800 mb-6"> 
            Our Mission to Transform Flight Tracking with <span className="healthcare-gradienttext">AI Technology</span> 
          </h1> 
          <p className="text-lg text-gray-600 max-w-3xl mx-auto"> 
            SkyWise AI brings together innovative technology, aviation expertise, and real-time data to improve how we track and manage flights around the globe. 
          </p> 
        </div>       </section> 
 
      {/* About Project Section */} 
      <section className="py-16 bg-white"> 
        <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8"> 
          <div className="healthcare-card mb-12"> 
            <div className="flex items-center mb-6"> 
              <Globe className="h-6 w-6 text-blue-600 mr-2" /> 
              <h2 className="text-2xl font-bold text-gray-800">The Project</h2> 
            </div> 
            <p className="text-gray-600 mb-4"> 
              This project, AI-Powered Flight Tracking, is developed as part of an academic endeavor by a dedicated team of Computer Science Engineering students. The team includes K monish, Nithin, who are currently pursuing their B.Tech in Computer Science Engineering. 
            </p> 
            <p className="text-gray-600 mb-4"> 
              The main objective of this project is to utilize artificial intelligence to help users track flight current location, enhancing the flight tracking through intelligent digital support. 
            </p> 
            <p className="text-gray-600"> 
              By combining real-time flight data with AI insights, our platform offers a unique approach to travel planning and flight monitoring, ensuring users have access to vital information when they need it most. 
            </p>           </div> 
 
          {/* Values */} 
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16"> 
            <div className="healthcare-card flex flex-col items-center text-center"> 
              <div className="bg-blue-100 p-3 rounded-full mb-4"> 
                <Plane className="h-6 w-6 text-blue-600" /> 
              </div> 
              <h3 className="text-xl font-semibold text-gray-800 mb-2">Accuracy</h3> 
              <p className="text-gray-600">We strive to provide the most accurate and up-to-date flight information available.</p> 
            </div> 
             
            <div className="healthcare-card flex flex-col items-center text-center"> 
              <div className="bg-blue-100 p-3 rounded-full mb-4"> 
                <Award className="h-6 w-6 text-blue-600" /> 
              </div> 
              <h3 className="text-xl font-semibold text-gray-800 mb-2">Excellence</h3> 
              <p className="text-gray-600">We strive for exceptional quality in our AI algorithms and data accuracy.</p> 
            </div> 
             
            <div className="healthcare-card flex flex-col items-center text-center"> 
              <div className="bg-blue-100 p-3 rounded-full mb-4"> 
                <Map className="h-6 w-6 text-blue-600" /> 
              </div> 
              <h3 className="text-xl font-semibold text-gray-800 mb-2">Global Coverage</h3>               <p className="text-gray-600">We track flights worldwide, providing comprehensive coverage across all major airlines.</p> 
            </div> 
          </div> 
        </div>       </section> 
 
      {/* Team Section */} 
      <section className="py-16 bg-blue-50"> 
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> 
          <div className="text-center mb-12"> 
            <h2 className="text-3xl font-bold text-gray-800 mb-4">Meet Our Team</h2> 
            <p className="text-gray-600 max-w-2xl mx-auto"> 
              Dedicated Computer Science Engineering students bringing innovation to flight tracking. 
            </p> 
          </div> 
           
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto"> 
            {teamMembers.map((member, index) => ( 
              <div key={index} className="healthcare-card flex items-center"> 
                <img  
                  src={member.image}                    alt={member.name}  
                  className="w-20 h-20 rounded-full object-cover mr-6 border-2 border-blue-500" 
                /> 
                <div> 
                  <h3 className="text-xl font-semibold text-gray-800">{member.name}</h3> 
                  <p className="text-blue-600">{member.role}</p> 
                  <p className="text-gray-600 mt-2">B.Tech Computer Science Engineering</p> 
                </div> 
              </div> 
            ))} 
          </div> 
        </div> 
      </section> 
       
      <Footer /> 
    </div> 
  ); }; 
 
export default About; 
 
 
import React from 'react'; import Navbar from '@/components/layout/Navbar'; import Footer from '@/components/layout/Footer'; import ChatBot from '@/components/chat/ChatBot'; import { Button } from '@/components/ui/button'; 
import { Plane, ArrowRight, Globe, Check, Zap } from 'lucide-react'; import { Link } from 'react-router-dom'; 
 
const Index = () => { 
  const features = [ 
    { 
      icon: <Plane className="h-6 w-6 text-blue-600" />, 
      title: 'Real-Time Flight Tracking', 
      description: 'Get accurate, up-to-the-minute information on any flight around the globe.' 
    }, 
    { 
      icon: <Globe className="h-6 w-6 text-blue-600" />,       title: 'Global Coverage', 
      description: 'Track flights from all major airlines and airports worldwide with comprehensive data.' 
    }, 
    { 
      icon: <Zap className="h-6 w-6 text-blue-600" />,       title: 'Smart Predictions', 
      description: 'Receive AI-powered insights about potential delays, gate changes, and arrival times.'     }   ]; 
 
  return ( 
    <div className="min-h-screen flex flex-col"> 
      <Navbar /> 
       
      {/* Hero Section */} 
      <section className="bg-blue-50 pt-16 pb-20"> 
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> 
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center"> 
            <div className="space-y-6"> 
              <div className="inline-block bg-blue-100 px-3 py-1 rounded-full text-blue-700 fontmedium text-sm"> 
                AI-Powered Aviation Technology 
              </div> 
              <h1 className="text-4xl md:text-5xl font-bold text-gray-800"> 
                Smart Flight Tracking with <span className="healthcare-gradient-text">AI Power</span> 
              </h1> 
              <p className="text-lg text-gray-600"> 
                SkyWise AI combines real-time flight data with artificial intelligence to help users track flights globally. Ask our AI anything about flights and travel planning. 
              </p> 
              <div className="flex flex-wrap gap-4"> 
                <Link to="/signup"> 
                  <Button className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-6"> 
                    Get Started <ArrowRight className="ml-2 h-4 w-4" /> 
                  </Button> 
                </Link> 
                <Link to="/about"> 
                  <Button variant="outline" className="border-blue-600 text-blue-700 px-6 py-6">                     Learn More 
                  </Button> 
                </Link> 
              </div> 
              <div className="flex items-center text-sm text-gray-500 pt-2"> 
                <Check className="h-4 w-4 text-blue-500 mr-2" /> 
                <span>No credit card required</span> 
              </div> 
            </div> 
             
            <div className="lg:mt-0 mt-8 shadow-xl rounded-xl overflow-hidden">               <ChatBot /> 
            </div> 
          </div> 
        </div>       </section> 
 
      {/* Features Section */} 
      <section className="py-16 bg-white"> 
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> 
          <div className="text-center mb-16"> 
            <h2 className="text-3xl font-bold text-gray-800">Why Choose SkyWise AI</h2> 
            <p className="mt-4 text-gray-600 max-w-2xl mx-auto"> 
              Our platform combines advanced AI with real-time flight data to provide comprehensive tracking information. 
            </p> 
          </div> 
           
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8"> 
            {features.map((feature, index) => ( 
              <div                  key={index}  
                className="healthcare-card flex flex-col items-center text-center h-full"  
              > 
                <div className="bg-blue-100 p-3 rounded-full mb-4"> 
                  {feature.icon} 
                </div> 
                <h3 className="text-xl font-semibold text-gray-800 mb-2">{feature.title}</h3> 
                <p className="text-gray-600 flex-grow">{feature.description}</p> 
              </div> 
            ))} 
          </div> 
        </div>       </section> 
 
      {/* CTA Section */} 
      <section className="py-16 bg-gradient-to-r from-blue-500 to-blue-700 text-white"> 
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center"> 
          <h2 className="text-3xl font-bold mb-4">Ready to Experience AI-Powered Flight Tracking?</h2> 
          <p className="max-w-2xl mx-auto mb-8 text-white/80"> 
            Join thousands of travelers who use SkyWise AI to track flights and plan their journeys with confidence. 
          </p> 
          <Link to="/signup"> 
            <Button className="bg-white text-blue-700 hover:bg-gray-100 px-8 py-6 text-lg fontmedium"> 
              Sign Up Now 
            </Button> 
          </Link> 
        </div> 
      </section> 
       
      <Footer /> 
    </div> 
  ); }; 
 
export default Index; 
 
 
import type { Config } from "tailwindcss"; 
 
export default { 
 	darkMode: ["class"],  	content: [ 
 	 	"./pages/**/*.{ts,tsx}", 
 	 	"./components/**/*.{ts,tsx}", 
 	 	"./app/**/*.{ts,tsx}", 
 	 	"./src/**/*.{ts,tsx}", 
 	], 
 	prefix: "",  	theme: {  	 	container: {  	 	 	center: true, 
 	 	 	padding: '2rem',  	 	 	screens: {  	 	 	 	'2xl': '1400px' 
 	 	 	} 
 	 	}, 
 	 	extend: {  	 	 	colors: { 
 	 	 	 	border: 'hsl(var(--border))',  	 	 	 	input: 'hsl(var(--input))',  	 	 	 	ring: 'hsl(var(--ring))',  	 	 	 	background: 'hsl(var(--background))', 
 	 	 	 	foreground: 'hsl(var(--foreground))',  	 	 	 	primary: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--primary))', 
 	 	 	 	 	foreground: 'hsl(var(--primary-foreground))' 
 	 	 	 	}, 
 	 	 	 	secondary: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--secondary))', 
 	 	 	 	 	foreground: 'hsl(var(--secondary-foreground))' 
 	 	 	 	}, 
 	 	 	 	destructive: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--destructive))', 
 	 	 	 	 	foreground: 'hsl(var(--destructive-foreground))' 
 	 	 	 	}, 
 	 	 	 	muted: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--muted))', 
 	 	 	 	 	foreground: 'hsl(var(--muted-foreground))' 
 	 	 	 	}, 
 	 	 	 	accent: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--accent))', 
 	 	 	 	 	foreground: 'hsl(var(--accent-foreground))' 
 	 	 	 	}, 
 	 	 	 	popover: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--popover))', 
 	 	 	 	 	foreground: 'hsl(var(--popover-foreground))' 
 	 	 	 	}, 
 	 	 	 	card: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--card))', 
 	 	 	 	 	foreground: 'hsl(var(--card-foreground))' 
 	 	 	 	}, 
                // Flight tracking theme colors 
                healthcare: { 
                    primary: '#1E90FF', // Updated to a sky blue                     secondary: '#0A4B8F', // Darker blue                     accent: '#64B5F6', // Light blue accent                     light: '#F0F8FF', // Very light blue background                     dark: '#1A2A3A', // Dark navy blue 
                }, 
 	 	 	 	sidebar: { 
 	 	 	 	 	DEFAULT: 'hsl(var(--sidebar-background))',  	 	 	 	 	foreground: 'hsl(var(--sidebar-foreground))',  	 	 	 	 	primary: 'hsl(var(--sidebar-primary))', 
 	 	 	 	 	'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',  	 	 	 	 	accent: 'hsl(var(--sidebar-accent))', 
 	 	 	 	 	'accent-foreground': 'hsl(var(--sidebar-accent-foreground))', 
 	 	 	 	 	border: 'hsl(var(--sidebar-border))', 
 	 	 	 	 	ring: 'hsl(var(--sidebar-ring))' 
 	 	 	 	} 
 	 	 	}, 
 	 	 	borderRadius: {  	 	 	 	lg: 'var(--radius)',  	 	 	 	md: 'calc(var(--radius) - 2px)', 
 	 	 	 	sm: 'calc(var(--radius) - 4px)' 
 	 	 	}, 
 	 	 	keyframes: {  	 	 	 	'accordion-down': { 
 	 	 	 	 	from: { 
 	 	 	 	 	 	height: '0' 
 	 	 	 	 	}, 
 	 	 	 	 	to: { 
 	 	 	 	 	 	height: 'var(--radix-accordion-content-height)' 
 	 	 	 	 	} 
 	 	 	 	}, 
    'accordion-up': {      from: { 
 	 	 	 	 	 	height: 'var(--radix-accordion-content-height)' 
 	 	 	 	 	}, 
 	 	 	 	 	to: { 
 	 	 	 	 	 	height: '0' 
 	 	 	 	 	} 
 	 	 	 	}, 
                'float': { 
                    '0%, 100%': { transform: 'translateY(0)' }, 
                    '50%': { transform: 'translateY(-10px)' }, 
                }, 
                'pulse-gentle': { 
                    '0%, 100%': { opacity: '1' }, 
                    '50%': { opacity: '0.8' }, 
                } 
 	 	 	}, 
 	 	 	animation: { 
 	 	 	 	'accordion-down': 'accordion-down 0.2s ease-out', 
 	 	 	 	'accordion-up': 'accordion-up 0.2s ease-out', 
                'float': 'float 6s ease-in-out infinite', 
                'pulse-gentle': 'pulse-gentle 3s ease-in-out infinite' 
 	 	 	}, 
            backgroundImage: { 
                'healthcare-gradient': 'linear-gradient(to right, #1E90FF, #0A4B8F)', 
                'healthcare-light': 'linear-gradient(180deg, #F0F8FF 0%, #E0F1FF 100%)', 
            } 
 	 	} 
 	}, 
 	plugins: [require("tailwindcss-animate")], } satisfies Config;
